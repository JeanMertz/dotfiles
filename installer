#!/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby
# Some parts kindly taken from Homebrew installer
require 'rubygems'
require 'optparse'

$ruby_version = '1.9.3-p194'
$home = File.expand_path('~')

@options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: installer [options]"
  opts.on("-d", "--development", "Run in development mode") { |o| @options[:development] = o }
  opts.on("-v", "--verbose", "Run verbosely") { |o| @options[:verbose] = o }
  opts.on("-t", "--test-puppet", "Show output of Puppet but don't make any changes") { |o| @options[:noop] = o }
end.parse!

module Tty extend self
  def blue; bold 34; end
  def white; bold 39; end
  def red; underline 31; end
  def reset; escape 0; end
  def bold n; escape "1;#{n}" end
  def underline n; escape "4;#{n}" end
  def escape n; "\033[#{n}m" if STDOUT.tty? end
end

class Array
  def shell_s
    cp = dup
    first = cp.shift
    cp.map{ |arg| arg.gsub " ", "\\ " }.unshift(first) * " "
  end
end

def gem_installed? name
  if Dir.glob("#{$home}/.rbenv/versions/#{$ruby_version}/gemsets/global/gems/#{name}*")
    true
  elsif defined?(Gem::Specification.find_all_by_name)
    Gem::Specification.find_all_by_name(name).any?
  else
    Gem.available?(name)
  end
end

def ohai *args
  puts "#{Tty.blue}==>#{Tty.white} #{args.shell_s}#{Tty.reset}"
end

def warn warning
  puts "#{Tty.red}Warning#{Tty.reset}: #{warning.chomp}"
end

def system command, opts = {}
  command += ' &>/dev/null' unless @options[:verbose] || opts[:verbose]

  if ! Kernel.system(command) && opts[:abort] != false
    abort "Failed during: #{command}"
  end
end


##########################################


ohai 'This script will install:'
%w[dotfiles/ .zshrc .zlogin .vimrc .gemrc].each do |file|
  puts "#{$home}/#{file}"
end

if Dir["/usr/local/.git/*"].empty?
  ohai 'Installing Homebrew...'
  system 'ruby -e "$(curl -fsSkL raw.github.com/mxcl/homebrew/go)"', :verbose => true
  ohai 'Verifying Homebrew installation...'
  system 'brew doctor'
end


unless File.exists? '/usr/local/bin/rbenv'
  ohai 'Installing rbenv...'
  system 'brew install rbenv'
  system 'brew install rbenv-gemset'

  File.open("#{$home}/.bash_profile", 'a+') do |file|
    line = 'if which rbenv >/dev/null; then eval "$(rbenv init -)"; fi'
    file.write(line) unless File.read("#{$home}/.bash_profile").grep(/rbenv/).any?
  end
end

unless File.exists? '/usr/local/bin/ruby-build'
  ohai 'Installing ruby-build...'
  system 'brew install ruby-build'
end

unless File.exists? "#{$home}/.rbenv/versions/#{$ruby_version}/"
  ohai "Installing Ruby #{$ruby_version} (hang tight, this will take a while)"
  system "rbenv install #{$ruby_version}", :abort => false
  system "rbenv global #{$ruby_version}"
  system 'eval "$(rbenv init -)"'
end

unless File.exists? "#{$home}/.rbenv/versions/#{$ruby_version}/gemsets/global"
  system "mkdir -p #{$home}/.config/global-gemset && cd #{$home}/.config/global-gemset"
  system 'echo global > .rbenv-gemsets'
  system "rbenv gemset create #{$ruby_version} global"
end

unless gem_installed? 'rbenv-rehash'
  system "#{$home}/.rbenv/shims/gem install rbenv-rehash --no-ri --no-rdoc"
end

unless gem_installed? 'puppet'
  ohai 'Installing Puppet...'
  system "#{$home}/.rbenv/shims/gem install puppet -v 3.0.1 --no-ri --no-rdoc"

  # Hack to prevent Puppet from disabling the HOME environment variable (breaks Homebrew)
  # => http://grokbase.com/t/gg/puppet-users/12a35t566x/puppet-3-killed-my-environment-variables
  %x[sed -i -e "s/'HOME', //" #{$home}/.rbenv/versions/#{$ruby_version}/gemsets/global/gems/puppet-3.0.1/lib/puppet/util/posix.rb]
end

if Dir["#{$home}/dotfiles/.git/*"].empty?
  ohai 'Cloning Dotfiles repository...'

  if @options[:development]
    system "cp -R #{$home}/Dropbox/dotfiles-next #{$home}/dotfiles"
  else
    system "git clone https://github.com/jeanmertz/dotfiles #{$home}/dotfiles"
  end

  ohai 'Checking out "next" branch...'
  system "cd #{$home}/dotfiles"
  system 'git checkout next'
else
  ohai 'Pulling latest changes from "next" branch...'

  if @options[:development]
    system "sudo rm -R #{$home}/dotfiles"
    system "cp -R #{$home}/Dropbox/dotfiles-next #{$home}/dotfiles"
  else
    system "cd #{$home}/dotfiles"
    system 'git pull next'
  end
end

ohai 'Launching Puppet installation script...'
opts = ''
opts += ' --verbose' if @options[:verbose]
opts += ' --noop' if @options[:noop]

system "cd #{$home}/dotfiles/ && sudo #{$home}/.rbenv/shims/puppet apply puppet.pp --modulepath=./modules #{opts}", :verbose => true

ohai 'Puppet completed successfully, your system is now fully bootstrapped'

warn 'Some Homebrew installations might have post-installation instructions.'
warn 'To see those instructions, run "brew info <formula>" for the following formulas:'
system 'brew list', :verbose => true
