#!/bin/sh
#
# This script is intended to be re-run at various times. It should not do any
# destructive actions.
set -e

cd "$(dirname "$0")/.." || exit 1

DOTFILES="$PWD"
XDG_CACHE_HOME="$HOME/.cache"
XDG_CONFIG_HOME="$HOME/.config"
XDG_DATA_HOME="$HOME/.local/share"
XDG_RUNTIME_DIR="$TMPDIR/.run"

pause() {
	printf "\n%s\n%s" "$*" "Press RETURN to continue or ^C to abort..."
	read -r
}

run() {
	pause "Running \`$*\`"
	eval "$@"
}

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until script has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# XDG Base Directories
#
# see: https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
mkdir -p "$XDG_CACHE_HOME" "$XDG_CONFIG_HOME" "$XDG_DATA_HOME" "$XDG_RUNTIME_DIR"

pause 'Symlinking dotfiles to XDG paths.'
ln -snf "$DOTFILES/alacritty"  "$XDG_CONFIG_HOME/alacritty"
ln -snf "$DOTFILES/fish"       "$XDG_CONFIG_HOME/fish"
ln -snf "$DOTFILES/git"        "$XDG_CONFIG_HOME/git"
ln -snf "$DOTFILES/gpg"        "$XDG_CONFIG_HOME/gpg"
ln -snf "$DOTFILES/kitty"      "$XDG_CONFIG_HOME/kitty"
ln -snf "$DOTFILES/npm"        "$XDG_CONFIG_HOME/npm"
ln -snf "$DOTFILES/nvim"       "$XDG_CONFIG_HOME/nvim"

pause 'Symlinking required dotfiles to HOME.'
ln -snf "$XDG_CONFIG_HOME/git/config" "$HOME/.gitconfig"
ln -snf "$DOTFILES/rust/rustup" "$HOME/.rustup"

# Set correct access rights to files and folders
chmod 700 "$XDG_CONFIG_HOME/gpg"

pause 'Syncing configuration defaults.'
curl -LSs http://git.io/JeZ1y > "$DOTFILES/alacritty/alacritty.default.yml"
curl -LSs http://git.io/Jen71 > "$DOTFILES/macos.default.sh"

pause 'Installing Homebrew.'
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
run brew doctor
run brew bundle --verbose

pause 'Writing macOS "defaults"'
sh macos.sh

pause 'Installing macOS software updates.'
softwareupdate --install --all --verbose

pause 'Setting Fish shell as default shell.'
grep -q fish /etc/shells || { echo /usr/local/bin/fish | sudo tee -a /etc/shells; }
[ "$SHELL" = "/usr/local/bin/fish" ] || chsh -s /usr/local/bin/fish

printf "\n%s" "DONE! Some changes might require a restart to take effect."
