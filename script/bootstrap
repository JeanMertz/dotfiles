#!/bin/sh
#
# This script is intended to be re-run at various times. It should not do any
# destructive actions.
set -e

if [ -z "$1" ]; then
	echo 2>&1 "usage: $0 DOTFILES_PATH"
	exit 1
fi

DOTFILES="$1"

pause() {
	printf "\n%s\n%s" "$*" "Press RETURN to continue or ^C to abort..."
	read -r
}

run() {
	pause "Running \`$*\`"
	eval "$@"
}

cd "$(dirname "$0")" || exit 1

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until script has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# XDG Base Directories
#
# see: https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
mkdir -p \
	"$HOME/.cache" \
	"$HOME/.config" \
	"$HOME/.local/share"

pause 'Symlinking dotfiles.'
ln -snf "$DOTFILES/alacritty" "$HOME/.config/alacritty"
ln -snf "$DOTFILES/fish"      "$HOME/.config/fish"

pause 'Syncing configuration defaults.'
curl -LSs 'https://raw.githubusercontent.com/jwilm/alacritty/master/alacritty.yml' > alacritty/alacritty.default.yml

pause 'Installing Homebrew.'
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
run brew doctor
run brew bundle --verbose

pause 'Installing macOS software updates.'
softwareupdate --install --all --verbose

pause 'Setting Fish shell as default shell.'
grep -q fish /etc/shells || { echo /usr/local/bin/fish | sudo tee -a /etc/shells; }
[ "$SHELL" = "/usr/local/bin/fish" ] || chsh -s /usr/local/bin/fish

printf "\n%s" "DONE! Some changes might require a restart to take effect."
